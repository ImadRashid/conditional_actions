name: Flutter Build APK

on:
  push:

jobs:
#this job is used to build the app only when we use a release keyword
  build-app:
    name: Build Flutter App
    if: contains(github.event.head_commit.message, 'release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "12.x"
 
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.3.4"
          channel: "stable"

      - run: flutter pub get
      - run: flutter build apk --release
      # - run: flutter build appbundle
    

      # - if: contains(github.event.head_commit.message, 'release')
      #   run: echo "release keyword found"
      # - if: contains(github.event.head_commit.message, 'internal-release')
      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{secrets.APP_ID}}
            token: ${{secrets.TOKEN}}
            groups: internal-group
            file: build/app/outputs/flutter-apk/app-release.apk
      - if: contains(github.event.head_commit.message, 'external-release')
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{secrets.APP_ID}}
            token: ${{secrets.TOKEN}}
            groups: external-group
            file: build/app/outputs/flutter-apk/app-release.apk


# #this job is used to release to internal developers if we use internal-release keyword
#   internal-release:
#     if: contains(github.event.head_commit.message, 'internal-release')
#     needs: build-app
#     name: uploading apk file
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: release-apk
#           path: build/app/outputs/flutter-apk/app-release.apk

#       - uses: wzieba/Firebase-Distribution-Github-Action@v1
#         with:
#             appId: ${{secrets.APP_ID}}
#             token: ${{secrets.TOKEN}}
#             groups: internal-group
#             file: build/app/outputs/flutter-apk/app-release.apk

# # #this job is used to release to external developers if we use external-release keyword
# #   external-release:
# #     if: contains(github.event.head_commit.message, 'external-release')
# #     needs: build-app
# #     name: uploading apk file
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/download-artifact@v2
# #         with:
# #           name: release-apk   
# #           path: build/app/outputs/flutter-apk/app-release.apk

# #       - uses: wzieba/Firebase-Distribution-Github-Action@v1
# #         with:
# #             appId: ${{secrets.APP_ID}}
# #             token: ${{secrets.TOKEN}}
# #             groups: external-group
# #             file: build/app/outputs/apk/release/app-release.apk


# #       - uses: wzieba/Firebase-Distribution-Github-Action@v1
# #         with:
# #             appId: ${{secrets.APP_ID}}
# #             token: ${{secrets.TOKEN}}
# #             groups: internal-group
# #             file: build/app/outputs/flutter-apk/app-release.apk

  